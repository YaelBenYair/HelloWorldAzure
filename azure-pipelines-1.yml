trigger:
- main

pool: default

variables:
  buildConfiguration: 'Release'
  patchVersion: 1

steps:

# Verify .NET SDK installation
- script: |
    dotnet --info
  displayName: 'Verify .NET SDK Installation'

# Restore dependencies
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '*/.csproj'
  displayName: 'Restore dependencies'

# Build the project
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '*/.csproj'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'Build the project'

# Increment the version number
- script: |
    echo "##vso[task.setvariable variable=buildNumber]$(Build.BuildId)"
    echo "New build number: $(Build.BuildId)"
  displayName: 'Increment Version Number'

# Pack the project into a NuGet package
- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '*/.csproj'
    configuration: $(buildConfiguration)
    outputDir: '$(Build.ArtifactStagingDirectory)'
  displayName: 'Pack the project into a NuGet package'

# Publish the package to Azure Artifacts
- task: NuGetCommand@2
  displayName: 'Publish the package to Azure Artifacts'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'a573a66d-a331-4b5b-89e5-37ce46c0521e/755ba64a-01e8-41bb-8970-0edb41a61e72'

# Print the new version to the console
- script: |
    echo "Build version: 1.0.$(Build.BuildId).$(patchVersion)"
  displayName: 'Print New Version'